plugins {
    id 'java'
    id 'java-library'

    id 'com.google.protobuf' version '0.8.18'

    id 'com.diffplug.spotless' version '6.11.0'

    id 'eclipse'
    id 'idea'

    id 'signing'

    id 'io.freefair.lombok' version '6.6.1'
}

group = 'emu.rhodium'
version = '0.1-PREALPHA'

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'


    implementation fileTree(dir: 'lib', include: ['*.jar'])

    //Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.7'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.7'

    // Line reading
    implementation group: 'org.jline', name: 'jline', version: '3.21.0'
    implementation group: 'org.jline', name: 'jline-terminal-jna', version: '3.21.0'
    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.10.0'

    // Networking
    implementation group: 'io.netty', name: 'netty-common', version: '4.1.86.Final'
    implementation group: 'io.netty', name: 'netty-handler', version: '4.1.86.Final'
    implementation group: 'io.netty', name: 'netty-transport-native-epoll', version: '4.1.86.Final'
    implementation group: 'io.netty', name: 'netty-transport-native-kqueue', version: '4.1.86.Final'

    // Serialization
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
    implementation platform('com.fasterxml.jackson:jackson-bom:2.14.0')
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

    // Java HTTP server
    implementation group: 'io.javalin', name: 'javalin', version: '5.6.3'

    // Java WebSocket server & client library.
    implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.5.2'

    // HTTP client
    testImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.10.0'

    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
}

configurations.configureEach {
    exclude group: 'org.slf4j', module: 'slf4j'
}

jar {
    exclude '*.proto'

    manifest {
        attributes 'Main-Class': 'emu.rhodium.Rhodium'
    }

    archiveBaseName = 'rhodium'
    if (project.hasProperty('jarFilename')) {
        archiveFileName = "${jarFilename}.${archiveExtension}"
    }

    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from('src/main/java') {
        include '*.xml'
    }

    destinationDirectory = file('.')
}

test {
    useJUnitPlatform()
}